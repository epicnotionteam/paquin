// ====================================================================================================
// Components / Form
// ====================================================================================================

// Component Instances
// ----------------------------------------------------------------------------------------------------

// Form [General]
// --------------------------------------------------

// Label
label {
    @include font-size( 'small' );
    font-weight: font-weight( 'bold' );
}


// Form [Base]
// Stylespartially override those inherited via form app
// --------------------------------------------------

// Component container
.form--base {
    // Label
    label {
        display: none !important;
    }
    // Input [All]
    input,
    select,
    textarea {
        @include font-size( 'base' );
        @include rem( min-height, 54px );
        background-color: color( 'steel', '5' );
        border: 0 none !important;
    }
    // Submit button
    button.submit {
        @extend %button--base;
        border: 0 none !important;
    }
}


// Form [Product, Actions]
// --------------------------------------------------

// Container
.product-form--regular {
    // Inner wrapper
    .product-form--atc {
        margin: 0
    }
    // Input container
    .product-form__action-wrapper {
        @include rem( gap, 12px );
        display: grid;
        // Input [Quantity]
        quantity-selector {
            border-radius: 0;
            max-width: none;
            width: 100%;
            // Remove label
            label {
                display: none;
            }
            // Wrapper
            .quantity-selector__wrapper {
                @include rem( height, 56px );
            }
            input {
                @include font-size( 'base' );
                border-left: 0 none;
                border-right: 0 none;
                font-family: font-family( 'base' );
            }
            // Increment buttons
            .quantity-selector__button {
                @include rem( padding, spacing(4) );
            }
        }
    }
}


// State management
.product-form--regular {
    // Increment button:focus
    .quantity-selector__button:focus {
        border: $border--base;
        border-left: 0 none;
        box-shadow: none;
    }
}


// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Container
    .product-form--regular {
        // Input container
        .product-form__action-wrapper {
            grid-template-columns: repeat( 2, 1fr );
        }
    }
}



// Form [Live Search]
// --------------------------------------------------

// Component container
.live-search-form {
    @include rem( height, 48px );
    position: relative;
    width: 100%;
    // Form container
    & > .form-field {
        @include rem( height, 48px );
        // Category dropdown
        .live-search-filter-label {
            @include rem( padding, spacing(3) spacing(5) spacing(3) 20px );
            background-color: color( 'steel', '3' );
            color: white;
        }
        // Dropdown indicator icon
        .form-field-select-wrapper svg {
            @include rem( margin-right, 12px );
            color: white;
        }
        // Primary input
        .live-search-form-field {
            @include font-size( 'small' );
            @include rem( padding, spacing(3) );
            border: 0 none;
            font-family: font-family( 'base' );
        }
        // Search button
        .live-search-button {
            @include rem( width, 48px );
            background-color: white;
            border: 0 none;
        }
    }
    // Output container
    .search-flydown--results {
        @include rem( padding, spacing(3) );
        // Group title
        .search-flydown__group-title {
            @extend %h5;
            padding: 0;
        }
        // Group item container
        .search-flydown__list-item {
            padding: 0;
        }
        .search-flydown--product-items,
        .search-flydown__pages-posts-items {
            width: 100%;
        }
        // Two-column results grid
        .search-flydown__products-pages-posts--two-columns {
            display: grid;
        }
        // Result group
        .search-flydown--product-items {
            // Result container [Product]
            .search-flydown--product {
                @include rem( column-gap, 12px );
                display: grid;
                grid-template-columns: max-content 1fr;
                // Image
                .search-flydown--product-image {
                    @include rem((
                        height: 48px,    
                        width: 48px
                    ));
                    border: $border--base;
                    margin: 0;
                }
                // Title
                .search-flydown--product-title {
                    @include font-size( 'small' );
                    color: color( 'steel', '3' );
                }
                // Price
                .price.search-flydown--product__price {
                    @include font-size( 'small' );
                    font-weight: font-weight( 'base' );
                }
            }
        }
    }
}


// State management
.live-search-form {
    & > .form-field {
        // Primary input [:Focus]
        .live-search-form-field:focus {
            border: 0 none;
        }
    }
}


// Adjust @medium breakpoint
@include mq( $from: medium ) {
   // Component container
    .live-search-form {
        // Output container
        .search-flydown--results {
            // Two-column results grid
            .search-flydown__products-pages-posts--two-columns {
                @include rem( column-gap, spacing(4) );
                grid-template-columns: repeat( 2, 1fr );
            }
        }
    }
}


// Form [General Inquiry]
// --------------------------------------------------

// Component container
.form--general-inquiry {}


// Form [Product Inquiry]
// --------------------------------------------------

// Component container
.form--product-inquiry {}


// Form [Newsletter Subscription]
// --------------------------------------------------

// Component container
.form--newsletter-subscription {}


// Form [Resume Submission]
// --------------------------------------------------

// Component container
.form--resume-submission {}