{% comment %}
// Output Content [Certifications] component
// Built specifically for homepage template
{% endcomment %}

{% comment %} Assign section data to vars {% endcomment %}
{% assign section_heading = section.settings.heading %}
{% assign section_content = section.settings.content %}
{% assign section_blocks  = section.blocks %}

{% comment %} Output section {% endcomment %}
<section class="section--content-certifications wrap--container theme--base">
	<div class="section__grid">
		{% comment %} Heading {% endcomment %}
		{% if section_heading != blank %}
			<h2 class="section__heading">{{ section_heading }}</h2>
		{% endif %}
		{% comment %} Content {% endcomment %}
		{% if section_content != blank %}
			<div class="section__content">{{ section_content | richtext }}</div>
		{% endif %}
		{% comment %} Container [Feed] {% endcomment %}
		<div class="container--feed">
			{% comment %} Loop over blocks, output logos in carousel, then convert to grid at desktop {% endcomment %}
            <div class="feed--certification">
                {% for block in section_blocks %}
                    {% comment %} Assign block data to vars {% endcomment %}
                    {% assign block_image = block.settings.image %}
                    {% assign block_title = block.settings.title %}
                    {% comment %} Output item {% endcomment %}
                    {% if block_image != blank %}
                        <div class="item">
                            <img class="item__image" src="{{ block_image | img_url: '256x' }}" alt="{{ block_title }}">                                    
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
		</div>
	</div>
</section>

{% comment %} Logo ticker functionality {% endcomment %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize ticker function
        function initTicker() {
            const feed = document.querySelector('.feed--certification');
            if (!feed) return;
            let position = 0;
            const speed = 0.4;
            // Move ticker
            function moveTicker() {
                position -= speed;
                const firstItem = feed.firstElementChild;
                const firstItemWidth = firstItem.offsetWidth;
                // Move first item to the end on viewport exit
                if (Math.abs(position) >= firstItemWidth) {
                    position += firstItemWidth;
                    feed.appendChild(firstItem);
                    // Adjust position to prevent jumping
                    feed.style.transform = `translateX(${position}px)`;
                }
                feed.style.transform = `translateX(${position}px)`;
                requestAnimationFrame(moveTicker);
            }
            moveTicker();
        }
        // Stop ticker
        function stopTicker() {
            const feed = document.querySelector('.feed--certification');
            if (feed) {
                // Reset the transform property
                feed.style.transform = '';
            }
        }
        // Check viewport width and initialize/stop ticker
        function checkViewport() {
            if (window.innerWidth < 640) {
                initTicker();
            } else {
                stopTicker();
            }
        }
        // Initialize ticker if viewport is <640px
        checkViewport();
        // Reinitialize/stop ticker on window resize
        window.addEventListener('resize', checkViewport);
    });
</script>

{% schema %}
{
    "name": "Certifications",
    "settings": [
        {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Heading"
        },
        {
            "type": "richtext",
            "id": "content",
            "label": "Content",
            "default": "<p>Content</p>"
        }
    ],
    "blocks": [
        {
            "type": "certification",
            "name": "Certification",
            "settings": [
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "Image"
                },
                {
                    "type": "text",
                    "id": "title",
                    "label": "Title",
                    "default": "Certification Title"
                }
            ]
        }
    ]
}
{% endschema %}