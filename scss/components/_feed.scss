// ====================================================================================================
// Components / Feed
// ====================================================================================================

// Component Instances
// ----------------------------------------------------------------------------------------------------

// Feed [Block]
// --------------------------------------------------

// Component container
.feed--block {
    @include rem( row-gap, spacing(5) );
    display: grid;
    // Item container
    .item {
        @include rem( row-gap, 12px );
        display: flex;
        flex-direction: column;
        // Number
        .item__number {
            @include rem( margin-bottom, spacing(1) );
            @extend %h5;
            display: block;
        }
        // Image
        .item__image {
            @include rem( margin-bottom, spacing(1) );
            align-self: flex-start;
            display: block;
            // Variant [Logo]
            &.variant--logo {
                @include rem((
                    max-height: 48px,
                    max-width: 128px
                ));
                height: 100%;
            }
        }
        // Content
        .item__heading {
            margin: 0;
        }
        // Content
        .item__content {
            @include font-size( 'small' );
            // Strip margin from final <p>
            & > p:last-child {
                margin: 0;
            }
        }
        // Link
        .item__link {
            @include font-size( 'small');
        } 
    }
}

// Adjust @small breakpoint
@include mq( $from: small ) {
    // Adjust grid structure
    .feed--block {
        @include rem( column-gap, spacing(7) );
        grid-template-columns: repeat( 2, 1fr );
    }
}

// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Component Variants
    .feed--block {
        // Columns [3, Desktop]
        &.variant--col-3 {
            @include rem( column-gap, spacing(7) );
            grid-template-columns: repeat( 3, 1fr );
        }
        // Columns [4, Desktop]
        &.variant--col-4 {
            @include rem( column-gap, spacing(7) );
            grid-template-columns: repeat( 4, 1fr );
        }
        // Columns [6, Desktop]
        &.variant--col-6 {
            @include rem( column-gap, spacing(4) );
            grid-template-columns: repeat( 6, 1fr );
        }
    }
}


// Feed [Certification]
// --------------------------------------------------

// Component container
.feed--certification {
    align-items: center;
    display: flex;
    gap: 0;
    justify-content: flex-start;
    will-change: transform;
    // Item container
    .item {
        @include rem( padding, 0 spacing(3) );
        display: inline-block;
        flex: 0 0 auto;
        white-space: nowrap;
        // Image
        .item__image {
            @include rem((
                max-height: 56px,
                max-width: 128px
            ));
            display: block;
        }
    }
}

// Adjust @custom breakpoint
@include mq( $from: 640px ) {
    // Component container
    .feed--certification {
        @include rem( gap, spacing(3) );
        flex-wrap: wrap;
        justify-content: space-between;
        width: auto;
        // Item container
        .item {
            padding: 0;
        }
    }
}

// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Component container
    .feed--certification {
        @include rem( gap, spacing(6) );
        justify-content: center;
    }
}


// Feed [Collection]
// --------------------------------------------------

// Component container
.feed--collection {
    @include rem(( 
        column-gap: spacing(3),
        row-gap: spacing(4) 
    ));
    display: grid;
    grid-template-columns: repeat( 2, 1fr );
    // Item container
    .item {
        align-content: flex-start;
        display: grid;
        // Wrap [Image]
        .item__wrap--image {
            @include rem( margin-bottom, 12px );
            aspect-ratio: 1/1;
            border: $border--base;
            overflow: hidden;
            // Image
            .item__image {
                display: block;
                height: 100%;
                object-fit: cover;
                object-position: center;
                transition: transform 0.8s ease-out;
                width: 100%;
            }
        }
        // Title
        .item__title {
            @include font-size( 'h4' );
            margin: 0;
            // Link
            a {
                color: color( 'steel', '1' ) !important;
                font-weight: font-weight( 'base' ) !important;
            }
        }
        // Description
        .item__description {
            @include font-size( 'small' );
            margin: 0;
        }
        // Link
        .item__link {
            @include font-size( 'small' );
            margin: 0;
        }
    }
}

// Adjust @small breakpoint
@include mq( $from: small ) {
    // Component container
    .feed--collection {
        @include rem( column-gap, spacing(4) );
        // Item description
        .item .item__description {
            @include rem( padding-right, spacing(2) );
        }
    }
}

// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Component container
    .feed--collection {
        grid-template-columns: repeat( 4, 1fr );
    }
}

// Adjust @large breakpoint
@include mq( $from: large ) {
    // Component container
    .feed--collection {
        grid-template-columns: repeat( 6, 1fr );
    }
}


// Feed [Collection, Subcollection]
// --------------------------------------------------

// Component container
.feed--collection.variant--subcollection {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin: -12px; // Half of the desired gap to create 24px gap between items

    // Item container
    .item {
        flex-grow: 0;
        flex-shrink: 0;
        flex-basis: calc(50% - 24px); // 2 columns with 24px gap
        margin: 12px; // Half of the desired gap
        
        // Title
        .item__title {
            @include font-size('base');
            @include rem(letter-spacing, -0.24px);
            line-height: 1.4;
        }
    }
}

// Adjust @medium breakpoint
@include mq($from: medium) {
    .feed--collection.variant--subcollection .item {
        flex-basis: calc(25% - 24px); // 4 columns with 24px gap
    }
}

// Adjust @large breakpoint
@include mq($from: large) {
    .feed--collection.variant--subcollection .item {
        flex-basis: calc(16.666% - 24px); // 6 columns with 24px gap
    }
}


// Feed [Post]
// --------------------------------------------------

// Component container
.feed--post {
    @include rem( row-gap, spacing(5) );
    display: grid;
    // Item container
    .item {
        @include rem( row-gap, 12px );
        align-content: flex-start;
        display: grid;
        // Wrap [Image]
        .item__wrap--image {
            @include rem( margin-bottom, spacing(2) );
            aspect-ratio: 1/1;
            overflow: hidden;
            // Image
            .item__image {
                display: block;
                height: 100%;
                object-fit: cover;
                object-position: center;
                transition: transform 0.8s ease-out;
                width: 100%;
            }
        }
        // Title
        .item__title {
            @extend %h4;
            margin: 0;
            // Link
            a {
                font-weight: font-weight( 'base' ) !important;
                color: color( 'steel', '1' ) !important;
            }
        }
        // Excerpt
        .item__excerpt {
            @include font-size( 'small' );
            margin: 0;
        }
        // Link
        .item__link {
            @include font-size( 'small' );
            margin: 0;
        }
    }
}

// Adjust @small breakpoint
@include mq( $from: small ) {
    // Component container
    .feed--post {
        @include rem( column-gap, spacing(4) );
        grid-template-columns: repeat( 2, 1fr );
        // Item excerpt
        .item .item__excerpt {
            @include rem( padding-right, spacing(2) );
        }
    }
}

// Adjust @large breakpoint
@include mq( $from: large ) {
    // Component container
    .feed--post {
        grid-template-columns: repeat( 4, 1fr );
    }
}

// State management
.feed--post {
    // Image:hover
    .item .item__wrap--image:hover {
        filter: none !important;
        .item__image {
            transform: scale( 1.04 );
        }
    }
}


// Feed [Product Grid]
// --------------------------------------------------

// Section container
.productgrid--items {
    @include rem( gap, spacing(3) );
    display: grid;
    grid-template-columns: 1fr 1fr;
    // Item container
    .productgrid--item {
        padding: 0;
        transition: box-shadow 0.16s ease-out;
        margin: 0 !important;
        width: 100% !important;
        // Item wrap
        .productitem {
            border: 0 none;
            box-shadow: none;
            padding: 0;
            // Image
            .productitem--image {
                @include rem( margin-bottom, 12px );
                border: $border--base;
            }
            // Title
            .productitem--title {
                @include rem( margin-bottom, 2px );
                @include font-size( 'base' );
                font-family: font-family( 'base' );
                font-weight: font-weight( 'bold' );
                // Link
                a {
                    color: color( 'steel', '1' ) !important;
                }
            }
            // Price
            .price.productitem__price {
                @include font-size( 'small' );
                @include rem(( 
                    column-gap: spacing(1),
                    margin: 6px 0 0
                ));
                align-items: center;
                display: flex;
            }
            // Indicator [Price, Complex Product]
			.indicator--price {
				@include font-size( 'xsmall' );
				@include rem( margin-bottom, spacing(2) );
				color: color( 'steel', '4' );
                margin: 0;
				// Place icon
				@include icon( before, 'error' ) {
					@include rem( margin, -3px spacing(1) 0 0 );
					display: inline-block;
				}
			} 
            // Container [Actions]
            .productitem--actions {
                @include rem(( 
                    bottom: 12px,
                    margin: 0 12px 
                ));
                display: none;
                .container--actions {
                    @include rem(( 
                        margin-top: 12px,
                        row-gap: 6px 
                    ));
                    display: grid;
                    width: 100%;
                }
            }
        }
    }
}

// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Adjust grid structure
    .template-collection .productgrid--items {
        @include rem(( 
            margin-top: -12px,
            row-gap: spacing(5) 
        ));
        grid-template-columns: repeat( 4, 1fr );
        // Item wrap
        .productitem {
            @include rem( padding, 12px );
            // Container [Actions]
            .productitem--actions {
                display: block;
            }
        }
    }

    // State management
    .template-collection .productgrid--items {
        // Item:hover
        .productgrid--item:hover .productitem {
            box-shadow: 0 2px 24px 0 rgba( 0, 0, 0, 0.24 ) !important;
        }
    }

}


// Feed [Role]
// --------------------------------------------------

// Component container
.feed--role {
    // Item container
    .item {
        @include rem((
            padding: spacing(4) 0,
            row-gap: 12px
        ));
        border-bottom: $border--base;
        display: grid;
        // Container [Overview]
        .container--overview {
            // Title
            .item__title {
                @include rem( margin, 0 0 1px );
                font-weight: font-weight( 'bold' );
            }
            // Container [Details]
            .container--details {
                 // Division
                .item__division {
                    margin: 0;
                }
                // Divider
                .item__divider {
                    @include rem( margin, 0 2px );
                    font-weight: font-weight( 'bold' );
                }
                // Location
                .item__location {
                    margin: 0;
                }
            }
        }
        // Container [Link]
        .container--link {
            // Link
            .item__link {
                @include font-size( 'small' );
            }
        }
        // Adjust first item
        &:first-child {
            padding-top: 0;
        }
    }
}

// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Component container
    .feed--role {
        // Item container
        .item {
            @include rem((
                column-gap: spacing(4)
            ));
            grid-template-columns: 1fr max-content;
             // Adjust last item
            &:last-child {
                border-bottom: 0 none;
                padding-bottom: 0;
            }
        }
    }
}


// Feed [Table, Specification]
// --------------------------------------------------

// Component container
.feed--table-specification {
    @include rem( row-gap, spacing(1) );
    display: grid;
    // Row
    .row {
        @include rem( column-gap, spacing(3) );
        display: grid;
        grid-template-columns: repeat( 2, 1fr );
        // Column [Content]
        .col--content p {
            font-weight: font-weight( 'bold' );
            text-align: right;
        }
    }
}


// Feed [Team]
// --------------------------------------------------

// Component container
.feed--team {
    @include rem(( 
        column-gap: spacing(3),
        row-gap: spacing(5) 
    ));
    display: grid;
    grid-template-columns: repeat( 2, 1fr );
    // Item
    .item {
        @include rem( row-gap, spacing(3) );
        align-content: flex-start;
        display: grid;
        // Image
        .item__image {
            display: block;
            width: 100%;
        }
        // Name
        .item__name {
            @extend %h4;
            @include rem( margin-bottom, spacing(1) );
         }
        // Role
        .item__role {
            @include font-size( 'small' );
            @include rem( margin, spacing(1) 0 0 );
        }
        // LinkedIn
        .item__linkedin {
            @include font-size( 'small' );
        }
    }
}

// Adjust @small breakpoint
@include mq( $from: small ) {
    // Component container
    .feed--team {
        grid-template-columns: repeat( 4, 1fr );
        // Container [Content]
        .container--content {
            @include rem( padding-right, spacing(2) );
        }
    }
}

// Adjust @large breakpoint
@include mq( $from: large ) {
    // Component container
    .feed--team {
        grid-template-columns: repeat( 6, 1fr );
    }
}


// Feed [Trust Signal]
// --------------------------------------------------

// Component container
.feed--trust-signal {
    // Item container
    .item {
        @include rem((
            column-gap: spacing(2),
            grid-template-columns: 16px 1fr,
            padding-top: spacing(5)
        ));
        border-top: $border--dark;
        display: grid;
        // Container [Content]
        .container--content {
            // Heading
            .item__heading {
                @include font-size( 'small' );
                @include rem( margin-bottom, spacing(1) );
                color: white;
                font-weight: font-weight( 'bold' );
            }
            // Content
            .item__content {
                @include font-size( 'small' );
                // Strip margin from final <p>
                p:last-child {
                    margin: 0;
                }
            }
        }
    }
    // Glide carousel instance
    // Container
    &.glide__slides {
        @include rem( padding-bottom, spacing(6) !important);
    }
}

// Adjust @medium breakpoint
@include mq( $from: medium ) {
    // Component container
    .feed--trust-signal {
        @include rem( column-gap, spacing(4) );
        display: grid;
        grid-template-columns: repeat( 3, 1fr );
         // Glide carousel instance
        // Container
        &.glide__slides {
            @include rem( padding-bottom, spacing(7) !important);
            display: grid !important;
        }
    }
}


// Feed [Method]
// --------------------------------------------------

// Component container
.feed--method {
    // item container
    .item {
        @include rem( padding, spacing(5) 0 );
        border-top: $border--base;
        // Adjust first item
        &:first-child {
            border-top: 0 none;
            padding-top: 0;
        }
        // Address
        .item__address {
            @include font-size( 'small' );
            @include rem( margin-bottom, spacing(2) );
            display: block;
        }
        // Phone [All]
        [class*=item__phone--] {
            @include font-size( 'small' );
            @include rem( margin-bottom, spacing(1) );
            color: color( 'action', '1' );
            display: block;
            font-weight: font-weight( 'bold' );
            text-decoration: none;
        }
    }
}