{% comment %}
// Output Hero [Internal] component
{% endcomment %}

{% comment %} Assign section data to vars {% endcomment %}
{% assign section_heading   = section.settings.heading %}
{% assign section_content   = section.settings.content %}
{% assign section_link_text = section.settings.link_text %}
{% assign section_link_url  = section.settings.link_url %}

{% comment %} Output section {% endcomment %}
<section class="section--hero-internal theme--dark">
    {% comment %} Container [Content] {% endcomment %}
    <div class="container--content">
        <div class="section__wrap--content">
            <div class="section__wrap--content-internal">
                {% comment %} Breadcrumbs {% endcomment %}
                {% render 'breadcrumbs' %}
                {% comment %} Heading {% endcomment %}
                {% if section_heading != blank %}
                    <h1 class="section__heading">{{ section_heading }}</h1>
                {% endif %}
                {% comment %} Content {% endcomment %}
		        {% if section_content != blank %}
			        <div class="section__content">{{ section_content | richtext }}</div>
		        {% endif %}
                {% comment %} Link {% endcomment %}
                {% if section_link_text != blank and section_link_url != blank %}
                    <a href="{{ section_link_url }}" class="section__link button--base button--icon-before button--icon-arrow-down">{{ section_link_text }}</a>
                {% endif %}
            </div>
            <div class="section__wrap--navigation-internal">
                <p class="navigation__label">Jump to section:</p>
                <select id="navigation--jump-links">
                    <option value="">Select a section</option>
                    {% comment %} Options added dynamically via script below {% endcomment %}
                </select>
            </div>
        </div>
    </div>
    {% comment %} Image {% endcomment %}
    <div class="container--image" style="background-image: url('{{ section.settings.image | img_url: '1024x' }}');"></div>
</section>

{% comment %} Generate jump link options {% endcomment %}
<script>
    function smoothScroll(target) {
        const element = document.querySelector(target);
        if (element) {
            const offset = window.innerWidth < 719 ? 56 : 80;
            const elementPosition = element.offsetTop;
            const offsetPosition = elementPosition - offset;
            window.scrollTo({
                top: offsetPosition,
                behavior: 'smooth'
            });
        }
    }
    function createSectionAnchors() {
        const sections = document.querySelectorAll('.shopify-section > section');
        const select = document.getElementById('navigation--jump-links');
        sections.forEach(section => {
            const heading = section.querySelector('.section__heading--small');
            if (heading) {
                const option = document.createElement('option');
                const sectionId = heading.textContent.toLowerCase().replace(/\s+/g, '-');
                section.id = sectionId;
                option.value = `#${sectionId}`;
                option.textContent = heading.textContent;
                select.appendChild(option);
            }
        });
        select.addEventListener('change', function() {
            const selectedOption = this.options[this.selectedIndex];
            const target = selectedOption.value;
            if (target) {
                smoothScroll(target);
            }
        });
    }
    document.addEventListener('DOMContentLoaded', createSectionAnchors);
</script>

{% schema %}
{
    "name": "Hero [Internal]",
    "settings": [
        {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Heading"
        },
        {
            "type": "richtext",
            "id": "content",
            "label": "Content",
            "default": "<p>Content</p>"
        },
        {
            "type": "text",
            "id": "link_text",
            "label": "Link Text",
            "default": "Link text",
            "info": "Leave empty if no link is required"
        },
        {
            "type": "url",
            "id": "link_url",
            "label": "Link URL"
        },
        {
            "type": "image_picker",
            "id": "image",
            "label": "Background Image"
        }
    ],
    "presets": [
        {
            "name": "Hero [Internal]",
            "category": "Paquin"
        }
    ]
}
{% endschema %}